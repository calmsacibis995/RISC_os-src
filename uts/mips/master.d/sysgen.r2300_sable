* $Header: sysgen.r2300_sable,v 1.11.1.6 90/06/05 16:40:52 wje Exp $
*VME Address, Interrupt Level and Bus Request Level Assignments for Clover1
*==========================================================================
*
*ADDRESS SPACE
*    1.	Only four of the SGI-designed clover 1 boards interface to the
*	VME bus (IP4, GF3, EN1, CG2).
*    2.	It is a good idea to leave special i/o (A16) addresses such as 0000
*	and FFFF for buy-in boards.
*    3.	IP4 occupies the entire A24 space, so we confine it to only
*	non-privileged access, and assign all other A24 spaces to supervisor
*	access only.  ALL A24 PERIPHERALS MUST RESPOND TO SUPERVISOR ACCESS
*	ONLY!
*    4.	Both IP4 and the MIPS board set generate ONLY data accesses to the
*	VME bus.  Thus code access privilege is superfluous for all
*	envisioned systems.  Both can generate both non-privileged and
*	supervisor-only cycles.
*
*Privilege codes:
*    np/s	non-privileged/supervisor access
*    c/d	code/data access
*
*Access sizes:
*    b/w/l	byte/word/long access
*
*A16 space:
*    IP4 implements a single write-only byte in the A16 space.  When this
*	    byte is written an on-board mailbox interrupt is generated:
*	IP4 0   0001 00xx xxxx xxxx	    s/np, d, b
*	IP4 1   0001 01xx xxxx xxxx	    s/np, d, b
*	IP4 2   0001 10xx xxxx xxxx	    s/np, d, b
*	IP4 3   0001 11xx xxxx xxxx	    s/np, d, b
*    GF3 has 2 16-bit read/write registers:
*     gro_dev 0 0010 000a xxxx xxx0	    s/np, d, w
*     gro_dev 1 0010 001a xxxx xxx0	    s/np, d, w
*    MIPS 4,8,16MByte RAM uses 1025 addresses, in various registers:
*		0000 0000 0000 0000   (during autoconf)
*		ssss ssaa aaaa aaaa   (ssss ss = CPU PROM chosen ID)
*					currently start at 0001 00aa aaaa aaaa
*					and go thru 0x1000+0x400*num_boards
*    EN1 implements 10 16-bit registers:
*	if_en0	0011 0000 00aa aaax	    s/np, d, w
*	if_en1	0011 0001 00aa aaax	    s/np, d, w
*    CG2 implements ? 8-bit registers:
*	CG2 0	0011 0010 xxxx aaa0	    s/np, d, b
*
* 3rd-party Peripheral boards use the rest of A16:
*		1xxx xxxx xxxx xxxx
*    Interphase 3201 What size address space?
*	dkip	1000 011a aaaa aaaa	    ?, ?, ??
*    Xylogics 1/2" Tape, What size address space?
*	xm	1000 1aaa aaaa aaaa	    ?, ?, ??
*    Xylogics 712 ESDI
*	xyl712	1001 000a aaaa aaaa	    ?, ?, ??
*    IKON Hardcopy, What size address space?
*	ikon	1001 0010 00aa aaaa	    ?, ?, ??
*
*
*A24 space:
*    IP4 cpu number 0 occupies the entire A24 non-privilege address space.
*    The other IP4 cpus cannot be accessed in A24 mode:
*	IP4 0   aaaa aaaa aaaa aaaa aaaa aaaa	np, c/d, b/w/l
*	IP4 1	xxxx xxxx xxxx xxxx xxxx xxxx
*	IP4 2	xxxx xxxx xxxx xxxx xxxx xxxx
*	IP4 3	xxxx xxxx xxxx xxxx xxxx xxxx
*
*    EN1 1 uses 1 Mbyte in the A24 space:
*	if_en1	0111 aaaa aaaa aaaa aaaa aaaa	s, d, b/w/l
*    GF3 uses 2 Mbytes in the A24 space:
*     gro_dev 0 100a aaaa aaaa aaaa aaaa aaaa	s, d, b/w/l (w/l to pipe)
*     gro_dev 1 101a aaaa aaaa aaaa aaaa aaaa	s, d, b/w/l (w/l to pipe)
*    EN1 0 uses 1 Mbyte in the A24 space:
*	if_en0	1100 aaaa aaaa aaaa aaaa aaaa	s, d, b/w/l
*    CMC ENP ethernet
*	if_enp1	1101 110a aaaa aaaa aaaa aaaa	s
*	if_enp0	1101 111a aaaa aaaa aaaa aaaa	s
*    Central Data SIO
*	cdsio	1111 0000 aaaa aaaa aaaa aaaa	s
*    MCT T6010 (Qic02)
*	??	1111 1111 1111 1110 0000 0000	s
*    TS ISI TAPE CONTROLLER
*	ts	1111 1111 1111 0101 0101 0000	s
*
*A32 space:
*    Each of the 4 IP4s occupies 16 Mbytes in the A32 space:
*	IP4 0	0000 0000 aaaa aaaa aaaa aaaa aaaa aaaa	    s/np, c/d, b/w/l
*	IP4 1	0000 0001 aaaa aaaa aaaa aaaa aaaa aaaa	    s/np, c/d, b/w/l
*	IP4 2	0000 0010 aaaa aaaa aaaa aaaa aaaa aaaa	    s/np, c/d, b/w/l
*	IP4 3	0000 0011 aaaa aaaa aaaa aaaa aaaa aaaa	    s/np, c/d, b/w/l
*
*    PC/AT uses 2 Mbyte in the A32 space:
*	PC1	0000 0100 001a aaaa aaaa aaaa aaaa aaaa     s/np, d, ????
*    EN1 uses 1 Mbyte in the A32 space:
*	en1	0000 0100 0111 aaaa aaaa aaaa aaaa aaaa	    s/np, d, b/w/l
*    GF3 uses 2 Mbytes in the A32 space:
*     gro_dev 0 0000 0100 100a aaaa aaaa aaaa aaaa aaaa	    s/np, d, b/w/l
*     gro_dev 1	0000 0100 101a aaaa aaaa aaaa aaaa aaaa	    s/np, d, b/w/l
*    EN1 uses 1 Mbyte in the A32 space:
*	en0	0000 0100 1100 aaaa aaaa aaaa aaaa aaaa	    s/np, d, b/w/l
*
*
*INTERRUPT LEVELS
*  The VME interrupt levels are assigned as follows (IRQ1 is the lowest 
*  priority; IRQ7 is the highest priority):
*	IRQ1	0xa5	dkip
*	 "	0xc0	xm
*	 "	0xa6	xyl712 unit 0
*	 "	0xa7	xyl712 unit 1
*	 "	????	MIPS RAM
*	IRQ2
*	IRQ3	????	MIPS RAM (default)
*	IRQ4	0x94	ts
*	 "	0xc1	if_enp0
*	 "	0xc2	if_enp1
*	 "	0x66	ikc
*	IRQ 	0x1	en0
*	 "	0x2	en1
*	 "	0xb0	cdsio unit 0
*	 "	0xb1	cdsio unit 1
*	IRQ6	0x40	gro_dev
*	IRQ7	????	MIPS RAM
*
*BUS REQUEST LEVELS
*  The VME bus request levels are assigned as follows (BR0 is the lowest 
*  priority; BR3 is the highest priority):
*	BR0
*	BR1
*	BR2
*	BR3
*
*****************************************************************************
* vector information		MUST BE FIRST!
*
* VECTOR: module [intr] [vector ipl unit] base [probe [probe_size]]
*	
*	module: boot module
*	intr:	interrupt function (default: module_prefix|"intr")
*	vector: vme interrupt vector
*	ipl:	(vme IRQx) interrupt priority level
*	base:	base address of card
*	probe:	address read to determine existence of card
*		(no probe address implies existence)
*	probe_size: size of probe (default 4 bytes)
*
* VECTOR: module=ts vector=0x94 ipl=4 unit=0 base=0xBCFFF550 

VECTOR: module=dkip vector=0xa5 ipl=1 unit=0 base=0xBD008600 
VECTOR: module=dkip intr=dkipscintr vector=0xa6 ipl=1 unit=0 base=0xBD008600 

* VECTOR: module=dkip vector=0xa7 ipl=1 unit=1 base=0xBD008800 
* VECTOR: module=dkip intr=dkipscintr vector=0xa8 ipl=1 unit=1 base=0xBD008800 

* VECTOR: module=tth vector=0x10 ipl=3 unit=0 base=0xBD008500
* VECTOR:	module=cp vector=0x12 ipl=4 unit=0 base=0xBCFFF520
* VECTOR: module=gro_dev vector=0x40 ipl=6 unit=0 base=0xBD002002 
* VECTOR: module=ikc vector=0x66 ipl=4 unit=0 base=0xBD009200 probe=0xBD009200 probe_size=2

***** Xylogics 772 1/2 inch tape
* VECTOR: module=xm vector=0xC0 ipl=1 unit=0 base=0xBD008800 probe=0xBD00880B probe_size=1

***** CMC ENP10 ethernet boards
* VECTOR: module=if_enp vector=0xc1 ipl=4 unit=0 base=0xBCDE0000 probe=0xBCDE1000  probe_size=2
* VECTOR: module=if_enp vector=0xc2 ipl=4 unit=1 base=0xBCE00000 probe=0xBCE01000  probe_size=2

***** SGI EN1 ethernet board
* VECTOR: module=if_en vector=0x01 ipl=5 unit=0 base=0xBCC00000 probe=0xBBD03004 probe_size=2
* VECTOR: module=if_en vector=0x02 ipl=5 unit=1 base=0xBC700000 probe=0xBBD03104 probe_size=2

***** xyl712 disk controller vectors
* VECTOR: module=xyl712 vector=0xa6 ipl=1 unit=0 base=0xBD009000 probe=0xBD00900B probe_size=1
* VECTOR: module=xyl712 vector=0xa7 ipl=1 unit=1 base=0xBD009010 probe=0xBD00901B probe_size=1

***** cd3608 serial controller vectors
* VECTOR: module=cdsio vector=0xb0 ipl=5 unit=0 base=0xBCF00000 probe=0xBCF0FFFF probe_size=1
* VECTOR: module=cdsio vector=0xb1 ipl=5 unit=1 base=0xBCF10000 probe=0xBCF1FFFF probe_size=1


* kernel
*
KERNEL: kernel

* device specifications
*
#!swaproot#ROOTDEV: /dev/root
#!swaproot#PIPEDEV: /dev/root
#swaproot#ROOTDEV: /dev/swap
#swaproot#PIPEDEV: /dev/swap
ROOTDEV: /dev/root
PIPEDEV: /dev/root
SWAPDEV: /dev/swap 0 0
DUMPDEV: /dev/swap

* compilation flags
*
CCOPTS: -Dident=undef -DR2300 -DINKERNEL -DKERNEL -Dsgi -DSOFTFP -DDEBUG -EB -g
LDOPTS: -N -T 80021000 -e start -o unix

* memory board handler (ECC)
*
INCLUDE: r2300mem

* general I/O utilities
*
INCLUDE: io
INCLUDE: vme
INCLUDE: wbflush_r2000
INCLUDE: sable_console
INCLUDE: graf_dummy
INCLUDE: spl_std
INCLUDE: cache_std
INCLUDE: tlb_std
INCLUDE: prom_entries_std
INCLUDE: todc
INCLUDE: leds
EXCLUDE: nvram
EXCLUDE: c8

INCLUDE: ssablecons
INCLUDE: sabledsk

*
* Time-of-day chip routines
*
INCLUDE: hd146818

* drivers to be included even though they may not appear to be equipped
*
INCLUDE: rd
*INCLUDE: sduart

* drivers to be excluded even though they may
* appear to be equipped
*

* Virtual Disk Driver
*
* To configure in vdisk comment out the "EXCLUDE vdisk" line and
* uncomment the "INCLUDE vdisk" lines, to include stripping and mirror
* uncomment the "INCLUDE stripe" and "INCLUDE mirror" lines.
*
EXCLUDE: vdisk
#INCLUDE: vdisk
#INCLUDE: stripe
#INCLUDE: mirror

* file systems
*
* WARNING: bfs must come *after* cs5 if both exist.
*
* Note that nfs, ufs and specfs implement file systems, but are NOT considered
* filesystems by mboot, since they do not generate fstypsw entries.
*
*INCLUDE: cs5
*INCLUDE: bfs
*INCLUDE: nfs
*INCLUDE: com
INCLUDE: socket
INCLUDE: proc
INCLUDE: ufs
INCLUDE: specfs
INCLUDE: nfs

* required kernel modules
INCLUDE: disp
INCLUDE: mem
INCLUDE: klog

* ttys and friends
INCLUDE: clone
INCLUDE: pts
INCLUDE: ptc
INCLUDE: gentty

* SV InterProcess Communication
INCLUDE: ipc
INCLUDE: msg
INCLUDE: sem

* shared memory
INCLUDE: shm

* kernel debugging tools
#kdebug#INCLUDE: monitor

INCLUDE: prf

* SLIP module
INCLUDE: slip

* Dummy stubs (These should come out sometime)
*
EXCLUDE: stubs

* Modules which haven't been done yet
*
EXCLUDE: du
*
* This must be specifically excluded so that the functions in the
* master files will be defined
*
EXCLUDE: dkvj
EXCLUDE: scsi
EXCLUDE: sd
EXCLUDE: xyl712

* if there is no mono screen attached
*
EXCLUDE: mono
